on:
  push:
  workflow_dispatch:
    inputs:
      component:
        description: 'Version component to increment (Use *minor* unless we have breaking changes)'
        required: false
        type: choice
        options:
          - minor
          - major
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: build
        run: |
          date > build
      - uses: actions/upload-artifact@v3
        with:
          name: build
          path: build
  release:
    runs-on: ubuntu-latest
    permissions: write-all
    needs: build
    if: github.ref == 'refs/heads/main' && github.event.inputs.component == ''
    steps:
      - uses: actions/checkout@v3
      - name: tag latest
        run: |
          git tag --force latest
          git push --force origin latest
      - uses: actions/download-artifact@v3
        with:
          name: build
          path: download
      - name: create release (latest)
        run: |
          release="$(.github/workflows/release.sh ${{ secrets.GITHUB_TOKEN }} ${{ github.repository }} create latest "Builder (latest)")"
          .github/workflows/release.sh ${{ secrets.GITHUB_TOKEN }} ${{ github.repository }} upload "$release" download/build

  release-semver:
    runs-on: ubuntu-latest
    permissions: write-all
    needs: build
    if: github.ref == 'refs/heads/main' && github.event.inputs.component != ''
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@v3
        with:
          name: build
          path: download
      - run: echo Version Component to Increase is ${{ github.event.inputs.component }}
      - name: Get Version Number
        run: .github/workflows/bump.py ${{ github.event.inputs.component }}
        id: bump
      - run: echo New version number ${{ steps.bump.outputs.newVersion }}
      - name: tag version
        run: |
          git tag ${{ steps.bump.outputs.newVersion }}
          git push origin ${{ steps.bump.outputs.newVersion }}
      - name: create release (semantic)
        run: |
          release="$(.github/workflows/release.sh ${{ secrets.GITHUB_TOKEN }} ${{ github.repository }} create ${{ steps.bump.outputs.newVersion }} "Builder (${{ steps.bump.outputs.newVersion }})")"
          .github/workflows/release.sh ${{ secrets.GITHUB_TOKEN }} ${{ github.repository }} upload "$release" download/build
